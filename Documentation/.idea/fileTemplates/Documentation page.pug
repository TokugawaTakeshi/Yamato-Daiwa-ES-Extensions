//- TODO Edit path
extends ../../../../../Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  //- TODO Edit paths
  include ../../Components/Components.pug
  //- TODO Select one delete remain:
  include ../../SharedAssets/Markup/Assets.english.pug
  include ../../SharedAssets/Markup/Assets.japanese.pug
  include ../../SharedAssets/Markup/Assets.russian.pug


block append Metadata

  -

    HTML_PAGE_LANGUAGE = "ja";
    HTML_PAGE_TITLE = buildHTML_PageTitle("${NAME}");
    HTML_PageMetaData = {
      description: MetaDescriptionTemplates.function({
        functionName: ${NAME},
        whatFunctionDoes: "makes the the magic" // TODO Edit
      }),
      author: HTML_PAGE_AUTHOR
    };

    FAVICON_URI = "@MustBeInRoot/favicon";

    styleSheetsURIs = [ "@Shared/CommonStyles", "@Shared/ExternalComponents" ];
    scriptsURIs.endOfBody = [ "@Common" ];
    
    RoutingEmulator.setCurrentRoute("${ROUTE}");
    
    // TODO Remove current locale (it will be added as default, no need to define it explicitly)
    LanguageDropDownList.setLinks({
      [LanguageDropDownList.supportedLanguages.english]: "./${NAME}.english.html",
      [LanguageDropDownList.supportedLanguages.japanese]: "./${NAME}.japanese.html",
      [LanguageDropDownList.supportedLanguages.russian]: "./${NAME}.russian.html",
    });


block append SpecificContent

  article.Article.DocumentationPage-Article

    +ProgrammaticEntityHeading({
      headingElementTag: "h1",
      entityName: "${NAME}",
      entityLocalizedInterpretation: "Stringified digits only check"
    }).Article-ProgrammaticEntityHeading

    +CallableExpressionScheme({
      technicalName: "${NAME}",
      localizedDescriptiveHeading: "Stringified digits only check",
      parametersSpecification: [
        {
          localizedName: "Target string",
          type: "string",
          required: true,
          genericTechnicalName: "targetString"
        }
      ],
      returnedValue: "boolean"
    }).Article-CallableExpressionScheme
    
    +CodeViewer--YDF.Article-CodeViewer
      +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.TypeScript })

        +CodeViewer-PartialListing--YDF: :html_special_characters_to_html_entities
          console.log("OK");

        +CodeViewer-Explanation--YDF
          p.Article-Paragraph.
            This code outputs "OK" to console.
