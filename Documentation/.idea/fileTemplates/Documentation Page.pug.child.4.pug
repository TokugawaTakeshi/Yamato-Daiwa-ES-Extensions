//- TODO Редактировать глубину
extends ../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  //- TODO Редактировать глубину
  include ../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../SharedComponents/SharedComponents.russian.pug


block append Metadata

  -

    RegularWebPageTemplate__YDF.configure({
      metadata: {
        title: buildHTML_PageTitle("${FILE_NAME_WITHOUT_EXTENSION}"),
        description: MetaDescriptionTemplates.function({
          functionName: "${FILE_NAME_WITHOUT_EXTENSION}",
          whatFunctionDoes: "особую, уличную магию" // TODO Редактировать
        }),
      },
      stylesSheetsURIs: [
        "${DS}CommonStyles",
        "${DS}LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
        "${DS}PreMadesStyles",
        "@CustomizedExternalComponents"
      ]
    });

    RoutingEmulator.setCurrentRoute("${ROUTE_WIHTOUT_CHILDREN}");

    LanguageDropDownList__YDF_DK.setLinks({
      english: routing.english.${ROUTE_WITH_CHILDREN}.${DS}URI,
      japanese: routing.japanese.${ROUTE_WITH_CHILDREN}.${DS}URI
    });

    //- TODO Если используется Pug-примесь `+CallableExpressionScheme--YDF_DK` то `pageTopHeading` не нужно    
    const { 
      ${DS}sectioning: localizedSectioning,
      ${DS}heading: pageTopHeading
    } = localizedRouting.${ROUTE_WITH_CHILDREN};


block append HeadScripts

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    //- TODO Редактировать
    +CallableExpressionScheme--YDF_DK({
      technicalName: "${FILE_NAME_WITHOUT_EXTENSION}",
      headingTag: "h1",
      localizedDescriptiveHeading: "Делает особую, уличную магию",
      parametersSpecification: [
        {
          localizedName: "Target string",
          type: "string",
          required: true,
          genericTechnicalName: "targetString"
        }
      ],
      returnedValue: "boolean"
    })

    +CodeViewer--YDF
      +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.TypeScript })

        +CodeViewer-PartialListing--YDF: :code_listing--yda
          console.log("OK");

        +CodeViewer-Explanation--YDF
          p.Article-Paragraph.
            Выводит "OK" в консоль (спасибо, кэп).
