$projectBuilding:

  $commonSettings:

    $publicDirectoriesRelativePaths:

      $production: 03-ProductionBuild


  # ━━━ Markup Processing ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  $markupProcessing:

    $common:
      $buildingModeDependent:
        $localDevelopment: { $mustResolveResourcesPointersToRelativePaths: true }

    $entryPointsGroups:

      All:

        $sourceFilesTopDirectoryRelativePath: 01-Source/Pages

        $partialsRecognition:
          $excludeFilesWithPrefixes: "_"
          $excludeSubdirectoriesWithPrefixes: "_"
          $excludeSubdirectoriesWithNames: [ TableOfContents, Data, ReusableFragments ]

        $buildingModeDependent:
          $localDevelopment:
            $outputTopDirectoryRelativePath: 02-LocalDevelopmentBuild
          $production:
            $outputTopDirectoryRelativePath: 03-ProductionBuild

    $routing:

      $specificationFileRelativePath: 01-Source/Pages/Routing.yaml
      $variable: routing
      $localizations:
        english: 01-Source/SharedAssets/Markup/Localizations/English/RoutingLocalization.english.yaml
        japanese: 01-Source/SharedAssets/Markup/Localizations/Japanese/RoutingLocalization.japanese.yaml
        russian: 01-Source/SharedAssets/Markup/Localizations/Russian/RoutingLocalization.russian.yaml


  # ━━━ Styles Processing ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  $stylesProcessing:

    $entryPointsGroups:

      CustomizedExternalComponents:

        $singleEntryPointSourceFileRelativePath: 01-Source/SharedAssets/CustomizedExternalComponents.styl

        $buildingModeDependent:
          $localDevelopment:
            $outputTopDirectoryRelativePath: 02-LocalDevelopmentBuild/styles
          $production:
            $outputTopDirectoryRelativePath: 03-ProductionBuild/styles

      Pages:

        $sourceFilesTopDirectoryRelativePath: 01-Source/Pages

        $partialsRecognition:
          $excludeFilesWithPrefixes: "_"
          $excludeSubdirectoriesWithPrefixes: "_"

        $buildingModeDependent:
          $localDevelopment:
            $outputTopDirectoryRelativePath: 02-LocalDevelopmentBuild
          $production:
            $outputTopDirectoryRelativePath: 03-ProductionBuild


  # ━━━ Images Processing ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  $imagesProcessing:

    $assetsGroups:

      MustBeInPublicRoot:

        $sourceFilesTopDirectoryRelativePath: 01-Source/SharedAssets/MustBeInPublicRoot

        $buildingModeDependent:
          $localDevelopment:
            $outputTopDirectoryRelativePath: 02-LocalDevelopmentBuild
          $production:
            $outputTopDirectoryRelativePath: 03-ProductionBuild

      Shared:

        $sourceFilesTopDirectoryRelativePath: 01-Source/SharedAssets/Images

        $buildingModeDependent:
          $localDevelopment:
            $outputTopDirectoryRelativePath: 02-LocalDevelopmentBuild/images
          $production:
            $outputTopDirectoryRelativePath: 03-ProductionBuild/images

      AssociatedWithPages:

        $sourceFilesTopDirectoryRelativePath: 01-Source/Pages
        $buildingModeDependent:
          $localDevelopment:
            $outputTopDirectoryRelativePath: 02-LocalDevelopmentBuild
          $production:
            $outputTopDirectoryRelativePath: 03-ProductionBuild


  # ━━━ Plain Copying ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  $plainCopying:

    $filesGroups:

      CommonStyles:
        $sourceFileRelativePath: node_modules/@yamato-daiwa/programming_documentation/YDPD-Common.css
        $buildingModeDependent:
          $localDevelopment: { $outputDirectoryRelativePath: 02-LocalDevelopmentBuild/styles }
          $production:
            $outputDirectoryRelativePath: 03-ProductionBuild/styles
            $revisioning: { $enable: true }

      LayoutsStyles:
        $sourceTopDirectoryRelativePath: node_modules/@yamato-daiwa/programming_documentation/Layouts
        $fileNameLastExtensions: [ "css" ]
        $buildingModeDependent:
          $localDevelopment: { $outputTopDirectoryRelativePath: 02-LocalDevelopmentBuild/styles/layouts }
          $production:
            $outputTopDirectoryRelativePath: 03-ProductionBuild/styles/layouts
            $outputDirectoryPathTransformations: { segmentsCountRelativeToGroupTopDirectoryWhichMustBeRemoved: 1 }
            $revisioning: { $enable: true }

      PreMadesStyles:
        $sourceFileRelativePath: node_modules/@yamato-daiwa/programming_documentation/YDPD-PreMades.css
        $buildingModeDependent:
          $localDevelopment: { $outputDirectoryRelativePath: 02-LocalDevelopmentBuild/styles }
          $production:
            $outputDirectoryRelativePath: 03-ProductionBuild/styles
            $revisioning: { $enable: true }

      CommonLogic:
        $sourceFileRelativePath: node_modules/@yamato-daiwa/programming_documentation/LogicDistributable/YDPD-Common.js
        $buildingModeDependent:
          $localDevelopment: { $outputDirectoryRelativePath: 02-LocalDevelopmentBuild }
          $production:
            $outputDirectoryRelativePath: 03-ProductionBuild
            $revisioning: { $enable: true }



  # ━━━ Browser Live Reloading ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  $browserLiveReloading:

    $setups:

      StylesAndComponentsTesting:

        $localServer:

          $rootDirectoryRelativePath: 02-LocalDevelopmentBuild

        $openInBrowsers: chrome


  # ━━━ Files Watching ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  $filesWatching:

    $relativePathsOfExcludeDirectories:
      - 03-ProductionBuild
