extends ../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../SharedAssets/Markup/Assets.english.pug
  include ../../../../../Components/Components.english.pug


block append Metadata

  -

    HTML_PAGE_LANGUAGE = "en";
    HTML_PAGE_TITLE = buildHTML_PageTitle("addElementsToArray");
    HTML_PageMetaData = {
      description: MetaDescriptionTemplates.function({
        functionName: "addElementsToArray",
        whatFunctionDoes: "adds elements to start, end, or specified position of target array; " +
          "mutable or non-mutable adding is available."
      }),
      author: HTML_PAGE_AUTHOR
    };

    FAVICON_URI = "@MustBeInPublicRoot/favicon";

    styleSheetsURIs = [ "@Shared/CommonStyles", "@Layouts/TwoColumns/TwoColumnsLayout", "@Shared/ExternalComponents" ];
    scriptsURIs.endOfBody = [ "@Common" ];

    RoutingEmulator.setCurrentRoute(
      "coreLibrary.functionality.arrays.addingOfElements.addElementsToArray"
    );

    LanguageDropDownList__YDF_DK.setLinks({
      japanese: "./addElementsToArray.japanese.html",
      russian: "./addElementsToArray.russian.html"
    });


block append SpecificContent

  article

    +CallableExpressionScheme--YDF_DK({
      technicalName: "addElementsToArray",
      headingTag: "h1",
      genericParameters: [ "ArrayElement" ],
      parametersSpecification: [
        {
          genericTechnicalName: "sourceData",
          type: "SourceData",
          required: true
        }
      ],
      returnedValue: "Array&lt;ArrayElement&gt;"
    })(lang="ru")
      +ObjectTypeAbstract--YDF_DK({
        typeName: "SourceData",
        propertiesSpecification: {
          $intersection: [
            {
              newElements: {
                type: "ReadonlyArray&lt;ArrayElement&gt;",
                required: true
              }
            },
            [
              {
                mutably: {
                  type: "boolean (true only)",
                  required: true
                },
                targetArray: {
                  type: "Array",
                  required: true
                }
              },
              {
                mutably: {
                  type: "boolean (false only)",
                  required: true
                },
                targetArray: {
                  type: "ReadonlyArray",
                  required: true
                }
              }
            ],
            [
              {
                toStart: {
                  type: "boolean (true only)",
                  required: true
                }
              },
              {
                toEnd: {
                  type: "boolean (true only)",
                  required: true
                }
              },
              {
                toPosition__numerationFrom0: {
                  type: "boolean (true only)",
                  required: true
                }
              },
              {
                toPosition__numerationFrom1: {
                  type: "boolean (true only)",
                  required: true
                }
              }
            ]
          ]
        }
      }).CallableExpressionScheme--YDF_DK-AppendixGridFlow-FullWidthItem
