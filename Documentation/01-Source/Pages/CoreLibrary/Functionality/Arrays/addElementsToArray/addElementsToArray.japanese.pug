extends ../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../SharedAssets/Markup/SharedAssets.japanese.pug
  include ../../../../../SharedComponents/SharedComponents.japanese.pug


block append Metadata

  -

    HTML_PAGE_LANGUAGE = "ja";
    HTML_PAGE_TITLE = buildHTML_PageTitle("addElementsToArray");
    HTML_PageMetaData = {
      description: MetaDescriptionTemplates.function({
        functionName: "addElementsToArray",
        whatFunctionDoes:
            "目標的配列の最初位置、最終位置もしくは指数で指定された位置に新規要素を追加する。" +
            "初期配列を変更するか、新しい配列を作る事も指定可能（但し、深いコピーは不可能）。"
      }),
      author: HTML_PAGE_AUTHOR
    };

    FAVICON_URI = "@MustBeInPublicRoot/favicon";

    styleSheetsURIs = [ "@Shared/CommonStyles", "@Layouts/TwoColumns/TwoColumnsLayout", "@Shared/ExternalComponents" ];
    scriptsURIs.endOfBody = [ "@Common" ];

    RoutingEmulator.setCurrentRoute(
      "coreLibrary.functionality.arrays.addingOfElements.addElementsToArray"
    );

    LanguageDropDownList__YDF_DK.setLinks({
      english: "./addElementsToArray.english.html",
      russian: "./addElementsToArray.russian.html"
    });


block append HeadScriptsLinks

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    +CallableExpressionScheme--YDF_DK({
      technicalName: "addElementsToArray",
      headingTag: "h1",
      localizedDescriptiveHeading: "配列に要素を追加する",
      genericParameters: [ "ArrayElement" ],
      parametersSpecification: [
        {
          genericTechnicalName: "sourceData",
          localizedName: "入力データ",
          type: "SourceData",
          required: true
        }
      ],
      returnedValue: "Array&lt;ArrayElement&gt;"
    })
      +ObjectTypeAbstract--YDF_DK({
        typeName: "SourceData",
        localizedDescriptiveHeading: "入力データ",
        propertiesSpecification: {
          $intersection: [
            {
              newElements: {
                localizedInterpretation: "新規要素",
                type: "ReadonlyArray&lt;ArrayElement&gt;",
                required: true
              }
            },
            [
              {
                mutably: {
                  localizedInterpretation: "変異有無",
                  type: "boolean (trueのみ)",
                  required: true
                },
                targetArray: {
                  localizedInterpretation: "目標的配列",
                  type: "Array",
                  required: true
                }
              },
              {
                mutably: {
                  localizedInterpretation: "変異有無",
                  type: "boolean (falseのみ)",
                  required: true
                },
                targetArray: {
                  localizedInterpretation: "目標的配列",
                  type: "ReadonlyArray",
                  required: true
                }
              }
            ],
            [
              {
                toStart: {
                  localizedInterpretation: "開始へ",
                  type: "boolean (trueのみ)",
                  required: true
                }
              },
              {
                toEnd: {
                  localizedInterpretation: "終わりへ",
                  type: "boolean (trueのみ)",
                  required: true
                }
              },
              {
                toPosition__numerationFrom0: {
                  localizedInterpretation: "特定位置へ（０からの計算）",
                  type: "boolean (trueのみ)",
                  required: true
                }
              },
              {
                toPosition__numerationFrom1: {
                  localizedInterpretation: "特定位置へ（１からの計算）",
                  type: "boolean (trueのみ)",
                  required: true
                }
              }
            ]
          ]
        }
      }).CallableExpressionScheme--YDF_DK-AppendixGridFlow-FullWidthItem


    p.Article-Paragraph.
      #[+Term--YDID 指数配列]の最初に位置か、最後の位置か、番号で指定された位置に新規要素を追加する。
      専用の#[+Term--YDID オプション]に依り、元の配列の変化（変異を伴う追加）、元の配列から新規配列の制作（変異を伴わない追加）、#[+Keyword--YDID 両方]
        可能である。
      但し、#[+Term--YDID 変異]を起こさない変化の場合、#[+Term--YDID 配列]のコンテナーが置き換えるが、#[+Term--YDID ディープコピー]
        （#[+Term--YDID オブジェクト系型]の#[+Term__Contrast--YDID 要素]の#[+Keyword--YDID 完全に]独立なコピー）は作成されず、
        そもそも#[+Keyword--YDID 何れでの]場合作成可能な訳では#[+Keyword--YDID ない]。


    h2.Article-Heading2 例

    +AttentionBox--YDF({ decoration: AttentionBox__YDF.DecorativeVariations.guidance, hasPrependedSVG_Icon: true }).
      当ページの選択的に読んでいる方が多いので、下記に重要な部分は繰り返しが有る。


    h3.Article-Heading3 配列の最初に位置に単一の要素を追加

    h4.Article-Heading4 変異を起こす追加

    +CodeViewer--YDF
      +CodeViewer-Listing--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.TypeScript })
        :html_special_characters_to_html_entities
          const sampleArray: Array<string> = [
            "INITIALLY_EXISTED_ELEMENT-1",
            "INITIALLY_EXISTED_ELEMENT-2"
          ];

          addElementsToArray({
            targetArray: sampleArray,
            newElements: [ "NEW_ELEMENT-1" ],
            toStart: true,
            mutably: true
          });

          console.log(sampleArray);


    mixin AddingOfOneElementToStartOrEndOfArrayMutably--TextFragment(properties)

      -

        const {
          newElementsCount,
          toEnd,
          similarNativeMethod
        } = properties;

        const similarNativeMethodName = toEnd ? "push" : "unshift";
        const similarNativeMethodReferenceURI = toEnd ? sharedExternalLinks.mdn.array.push : sharedExternalLinks.mdn.array.unshift;


      p.Article-Paragraph

        | #[+Term--YDID 文字列の]#[+Term__Contrast--YDID 配列]に#[+Term--YDID 要素]
        | #[+SecondaryEntity__Code--YDID "NEW_ELEMENT-1"]
        if newElementsCount > 1
          | と#[+SecondaryEntity__Code--YDID "NEW_ELEMENT-2"]
        | を追加します。
        | #[+ImportantEntity__Code--YDID mutably]#[+Term--YDID オプション]は理由も無く必須にされた訳では#[+Keyword--YDID なく]、
        |   プログラマーは何をしているか、はっきり意識する専門上の#[+Keyword--YDID 義務]です。
        | 此の例の場合#[+SecondaryEntity__Code--YDID true]値が指定してあるので、,#[+Keyword--YDID 元の]#[+Term--YDID 配列]が
        |   #[+Keyword--YDID 変わり]、
        if newElementsCount === 1
          if toEnd
            +SecondaryEntity__Code--YDID [ "INITIALLY_EXISTED_ELEMENT-1", "INITIALLY_EXISTED_ELEMENT-2", "NEW_ELEMENT-1" ]
          else
            +SecondaryEntity__Code--YDID [ "NEW_ELEMENT-1", "INITIALLY_EXISTED_ELEMENT-1", "INITIALLY_EXISTED_ELEMENT-2" ]
        else
          if toEnd
            +SecondaryEntity__Code--YDID
              | [ "INITIALLY_EXISTED_ELEMENT-1", "INITIALLY_EXISTED_ELEMENT-2", "NEW_ELEMENT-1", "NEW_ELEMENT-2" ]
          else
            +SecondaryEntity__Code--YDID
              | [ "NEW_ELEMENT-1", "NEW_ELEMENT-2", "INITIALLY_EXISTED_ELEMENT-1", "INITIALLY_EXISTED_ELEMENT-2" ]
        | に成る.

      +AttentionBox--YDF({
        decoration: AttentionBox__YDF.DecorativeVariations.warning,
        hasPrependedSVG_Icon: true
      }).
        此の使い方だと、#[+Keyword--YDID 元の]#[+Term--YDID 配列](#[+ImportantEntity__Code--YDID targetArray])の変化が起きる為、
          #[+ImportantEntity__Code--YDID ReadonlyArray]型が許可#[+Keyword--YDID されていない]。
      //- ━━━ TODO ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
