extends ../../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../../../../../SharedComponents/SharedComponents.russian.pug


block append Metadata

  -

    RegularWebPageTemplate__YDF.configure({
      metadata: {
        title: buildHTML_PageTitle("createArrayOfNaturalNumbers"),
        description: MetaDescriptionTemplates.function({
          functionName: "createArrayOfNaturalNumbers",
          whatFunctionDoes: ""
        }),
      },
      stylesSheetsURIs: [
        "$CommonStyles",
        "$LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
        "$PreMadesStyles",
        "@CustomizedExternalComponents"
      ]
    });

    RoutingEmulator.setCurrentRoute("coreLibrary.functionality.arrays.creating.createArrayOfNaturalNumbers");

    LanguageDropDownList__YDF_DK.setLinks({
      english: "./createArrayOfNaturalNumbers.english.html",
      japanese: "./createArrayOfNaturalNumbers.japanese.html"
    });


block append HeadScriptsLinks

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    +CallableExpressionScheme--YDF_DK({
      technicalName: "createArrayOfNaturalNumbers",
      headingTag: "h1",
      localizedDescriptiveHeading: "Создать массив натуральных чисел",
      parametersSpecification: [
        {
          genericTechnicalName: "options",
          localizedName: "Опции",
          type: "Options",
          required: true
        }
      ],
      returnedValue: "Array<number>"
    })
      +ObjectTypeAbstract--YDF_DK({
        typeName: "Options",
        localizedDescriptiveHeading: "Опции",
        propertiesSpecification: {
          elementsCount: {
            localizedInterpretation: "Число элементов",
            type: "number",
            required: true
          },
          isDescendingOrder: {
            localizedInterpretation: "Убывающий ли порядок",
            type: "boolean",
            defaultValue: false
          },
          startingNumber: {
            localizedInterpretation: "Начальное число",
            type: "number",
            defaultValue: 1
          }
        }
      })

    p.Article-Paragraph.
      Создаёт массив натуральных чисел, элементы идёт во возрастанию начиная с 1.

    +CodeViewer--YDF
      +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.TypeScript })

        +CodeViewer-PartialListing--YDF: :code_listing--yda
          console.log(createArrayOfNaturalNumbers(3))

        +CodeViewer-Explanation--YDF.
          Так как указано #[+SecondaryEntity--YDID 3] элемента, то будет возращён #[+Term--YDID массив]
            #[+SecondaryEntity--YDID трёх] #[+Term--YDID натуральных чисел] — #[+SecondaryEntity__Code--YDID [ 1, 2, 3 ]].

        +CodeViewer-PartialListing--YDF: :code_listing--yda
          console.log(createArrayOfNaturalNumbers(0))

        +CodeViewer-Explanation--YDF.
          Параметром может быть не только #[+Term--YDID натуральное число], но о 0, при этом в последнем случае
            будет возвращён пустой массив.

        +CodeViewer-PartialListing--YDF: :code_listing--yda
          console.log(createArrayOfNaturalNumbers(-1))
          console.log(createArrayOfNaturalNumbers(1.2))

      +CodeViewer-Explanation--YDF.
        Будет выброшено исключение.
