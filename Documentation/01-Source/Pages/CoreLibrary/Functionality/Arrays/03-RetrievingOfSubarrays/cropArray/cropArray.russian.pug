extends ../../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../../../../../SharedComponents/SharedComponents.russian.pug


block append Metadata

  -

    RegularWebPageTemplate__YDF.configure({
      metadata: {
        title: buildHTML_PageTitle("cropArray"),
        description: MetaDescriptionTemplates.function({
          functionName: "cropArray",
          whatFunctionDoes: ""
        })
      },
      stylesSheetsURIs: [
        "$CommonStyles",
        "$LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
        "$PreMadesStyles",
        "@CustomizedExternalComponents"
      ]
    });

    RoutingEmulator.setCurrentRoute("coreLibrary.functionality.arrays.retrievingOfSubarrays.cropArray");

    LanguageDropDownList__YDF_DK.setLinks({
      english: routing.english.coreLibrary.$children.functionality.$children.arrays.$children.
          retrievingOfSubarrays.$children.cropArray.$URI,
      japanese: routing.japanese.coreLibrary.$children.functionality.$children.arrays.$children.
          retrievingOfSubarrays.$children.cropArray.$URI
    });

    const { $sectioning: localizedSectioning } = localizedRouting.coreLibrary.$children.functionality.$children.arrays.
        $children.retrievingOfSubarrays.$children.cropArray;


block append HeadScripts

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    h1.Article-Heading1!= "<code>cropArray</code>"

    +CodeViewer--YDF({ title: "Сигнатура" })
      +CodeViewer-Listing--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.TypeScript }): :code_listing--yda
        <ArrayElement>(
          compoundParameter: Readonly<
            (
              {
                mutably: true;
                targetArray: Array<ArrayElement>;
              } |
              {
                mutably: false;
                targetArray: ReadonlyArray<ArrayElement>;
              }
            ) &
            (
              (
                {
                  fromStart: true;
                  fromEnd?: undefined;
                } &
                (
                  {
                    startingElementNumber__numerationFrom0: number;
                    startingElementNumber__numerationFrom1?: undefined;
                    fromFirstElement?: undefined;
                  } |
                  {
                    startingElementNumber__numerationFrom1: number;
                    startingElementNumber__numerationFrom0?: undefined;
                    fromFirstElement?: undefined;
                  } |
                  {
                    fromFirstElement: true;
                    startingElementNumber__numerationFrom1?: undefined;
                    startingElementNumber__numerationFrom0?: undefined;
                  }
                ) &
                (
                  {
                    endingElementNumber__numerationFrom0__including: number;
                    endingElementNumber__numerationFrom1__including?: undefined;
                    endingElementNumber__numerationFrom0__notIncluding?: undefined;
                    endingElementNumber__numerationFrom1__notIncluding?: undefined;
                    elementsCount?: undefined;
                    untilLastElement?: undefined;
                  } |
                  {
                    endingElementNumber__numerationFrom1__including: number;
                    endingElementNumber__numerationFrom0__including?: undefined;
                    endingElementNumber__numerationFrom0__notIncluding?: undefined;
                    endingElementNumber__numerationFrom1__notIncluding?: undefined;
                    elementsCount?: undefined;
                    untilLastElement?: undefined;
                  } |
                  {
                    endingElementNumber__numerationFrom0__notIncluding: number;
                    endingElementNumber__numerationFrom0__including?: undefined;
                    endingElementNumber__numerationFrom1__including?: undefined;
                    endingElementNumber__numerationFrom1__notIncluding?: undefined;
                    elementsCount?: undefined;
                    untilLastElement?: undefined;
                  } |
                  {
                    endingElementNumber__numerationFrom1__notIncluding: number;
                    endingElementNumber__numerationFrom0__including?: undefined;
                    endingElementNumber__numerationFrom1__including?: undefined;
                    endingElementNumber__numerationFrom0__notIncluding?: undefined;
                    elementsCount?: undefined;
                    untilLastElement?: undefined;
                  } |
                  {
                    elementsCount: number;
                    endingElementNumber__numerationFrom0__including?: undefined;
                    endingElementNumber__numerationFrom1__including?: undefined;
                    endingElementNumber__numerationFrom0__notIncluding?: undefined;
                    endingElementNumber__numerationFrom1__notIncluding?: undefined;
                    untilLastElement?: undefined;
                  } |
                  {
                    untilLastElement: true;
                    endingElementNumber__numerationFrom0__including?: undefined;
                    endingElementNumber__numerationFrom1__including?: undefined;
                    endingElementNumber__numerationFrom0__notIncluding?: undefined;
                    endingElementNumber__numerationFrom1__notIncluding?: undefined;
                    elementsCount?: undefined;
                  }
                )
              ) |
              (
                {
                  fromEnd: true;
                  fromStart?: undefined;
                } &
                (
                  {
                    rightElementNumber__numerationFrom0: number;
                    rightElementNumber__numerationFrom1?: undefined;
                    fromLastElement?: undefined;
                  } |
                  {
                    rightElementNumber__numerationFrom1: number;
                    rightElementNumber__numerationFrom0?: undefined;
                    fromLastElement?: undefined;
                  } |
                  {
                    fromLastElement: true;
                    rightElementNumber__numerationFrom1?: undefined;
                    rightElementNumber__numerationFrom0?: undefined;
                  }
                ) &
                (
                  {
                    leftElementNumber__numerationFrom0__including: number;
                    leftElementNumber__numerationFrom1__including?: undefined;
                    leftElementNumber__numerationFrom0__notIncluding?: undefined;
                    leftElementNumber__numerationFrom1__notIncluding?: undefined;
                    elementsCount?: undefined;
                    untilFirstElement?: undefined;
                  } |
                  {
                    leftElementNumber__numerationFrom1__including: number;
                    leftElementNumber__numerationFrom0__including?: undefined;
                    leftElementNumber__numerationFrom0__notIncluding?: undefined;
                    leftElementNumber__numerationFrom1__notIncluding?: undefined;
                    elementsCount?: undefined;
                    untilFirstElement?: undefined;
                  } |
                  {
                    leftElementNumber__numerationFrom0__notIncluding: number;
                    leftElementNumber__numerationFrom0__including?: undefined;
                    leftElementNumber__numerationFrom1__including?: undefined;
                    leftElementNumber__numerationFrom1__notIncluding?: undefined;
                    elementsCount?: undefined;
                    untilFirstElement?: undefined;
                  } |
                  {
                    leftElementNumber__numerationFrom1__notIncluding: number;
                    leftElementNumber__numerationFrom0__including?: undefined;
                    leftElementNumber__numerationFrom1__including?: undefined;
                    leftElementNumber__numerationFrom0__notIncluding?: undefined;
                    elementsCount?: undefined;
                    untilFirstElement?: undefined;
                  } |
                  {
                    elementsCount: number;
                    leftElementNumber__numerationFrom0__including?: undefined;
                    leftElementNumber__numerationFrom1__including?: undefined;
                    leftElementNumber__numerationFrom0__notIncluding?: undefined;
                    leftElementNumber__numerationFrom1__notIncluding?: undefined;
                    untilFirstElement?: undefined;
                  } |
                  {
                    untilFirstElement: true;
                    leftElementNumber__numerationFrom0__including?: undefined;
                    leftElementNumber__numerationFrom1__including?: undefined;
                    leftElementNumber__numerationFrom0__notIncluding?: undefined;
                    leftElementNumber__numerationFrom1__notIncluding?: undefined;
                    elementsCount?: undefined;
                  }
                )
              )
            ) &
            { mustThrowErrorIfSpecifiedElementsNumbersAreOutOfRange: boolean; }
          >
        ): Array<ArrayElement>

    +PageNotReadyApology--YDPD({
      currentState: PageNotReadyApology__YDPD.States.initialTextNotWritten
    })


    //- ━━━ Внешние ссылки ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    +Heading--YDF({
      level: 2,
      text: localizedSectioning.externalLinks.$heading,
      HTML_ID: localizedSectioning.externalLinks.$anchor
    }).Article-Heading2

    +LinksCardsFlow--YDF

      +LinksCardsFlow-ItemWithSVG_Icon--YDF({
        unendorsedExternalURI: GIT_HUB_REPOSITORY_URI_COMMON_PART__ACTUAL_BRANCH__WITH_TRAILING_SLASH +
            "CoreLibrary/Package/Source/Arrays/03-RetrievingOfSubarrays/cropArray.ts",
        title: "Исходный код"
      }): +File__SourceCode--YDF_Icon.LinksCardsFlow--YDF-SVG_Icon

      +LinksCardsFlow-ItemWithSVG_Icon--YDF({
        unendorsedExternalURI: GIT_HUB_REPOSITORY_URI_COMMON_PART__ACTUAL_BRANCH__WITH_TRAILING_SLASH +
            "CoreLibrary/Package/Tests/Automated/Arrays/03-RetrievingOfSubarrays/cropArray.test.ts",
        title: "Код тестов"
      }): +File__TestCode--YDF_Icon.LinksCardsFlow--YDF-SVG_Icon
