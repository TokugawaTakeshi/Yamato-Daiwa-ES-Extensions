extends ../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../SharedAssets/Markup/SharedAssets.english.pug
  include ../../../../../SharedComponents/SharedComponents.english.pug


block append Metadata

  -

    RegularWebPageTemplate__YDF.configure({
      metadata: {
        title: buildHTML_PageTitle("areStringifiedDigitsOnly"),
        description: MetaDescriptionTemplates.function({
          functionName: "areStringifiedDigitsOnly",
          whatFunctionDoes: MetaDescriptionTemplates.function({
            functionName: "areStringifiedDigitsOnly",
            whatFunctionDoes: "Checks whether all characters in the string argument are digits."
          })
        })
      },
      stylesSheetsURIs: [
        "$CommonStyles",
        "$LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
        "$PreMadesStyles",
        "@CustomizedExternalComponents"
      ]
    });

    RoutingEmulator.setCurrentRoute("areStringifiedDigitsOnly");

    LanguageDropDownList__YDF_DK.setLinks({
      japanese: routing.japanese.coreLibrary.$children.functionality.$children.strings.$children.
          areStringifiedDigitsOnly.$URI,
      russian: routing.russian.coreLibrary.$children.functionality.$children.strings.$children.
          areStringifiedDigitsOnly.$URI
    });


block append HeadScripts

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    +CallableExpressionScheme--YDF_DK({
      technicalName: "areStringifiedDigitsOnly",
      headingTag: "h1",
      localizedDescriptiveHeading: "Checks whether all characters in the string argument are digits",
      parametersSpecification: [
        {
          localizedName: "Target string",
          type: "string",
          required: true,
          genericTechnicalName: "targetString"
        }
      ],
      returnedValue: "boolean"
    })

    p.Article-Paragraph.
      Checks whether #[+Keyword--YDID all] characters in the #[+Keyword--YDID string] #[+Term--YDID argument] are
        #[+Term__Contrast--YDID digits].

    +AdmonitionBlock--YDF({ decorativeVariation: AdmonitionBlock__YDF.DecorativeVariations.notice, SVG_Icon: true })

      h2.Article-Heading2 Understanding the difference between digits and numbers

      p.Article-Paragraph.
        In mass media and other contexts, the terms "#[+Term--YDID digit]" and "#[+Term--YDID number]" are often used
          interchangeably, but they are #[+Keyword--YDID fundamentally] different.
        #[+DefinableTerm--YDID Digits] are the #[+Term--YDID characters] #[+ImportantEntity--YDID 0] through
          #[+ImportantEntity--YDID 9], and there are #[+Keyphrase--YDID only] #[+ImportantEntity--YDID 10] of them.
        Therefore, "#[+Term--YDID Digits]" in the name of the function #[+Keyword--YDID literally] refers to these characters.

      p.Article-Paragraph.
        If there are #[+Keyword--YDID at least] #[+Keyword__Contrast--YDID two] characters, then it is a [+Term--YDID number],
          #[+Keyphrase--YDID not a digit].
        Also, even #[+Term--YDID numerical sequences] that begin with a #[+ImportantEntity--YDID 0], such as
          #[+SecondaryEntity--YDID 0123] or #[+SecondaryEntity--YDID 0056], are #[+Keyword--YDID not] #[+Term--YDID numbers]
          and are instead merely #[+DefinableTerm--YDID sequences of digits] #[+Keyword__Contrast--YDID without] any
          #[+Keyword__Contrast--YDID mathematical] significance.

    +ImprovedList--YDF({ type: ImprovedList__YDF.Types.unordered }).Article-ImprovedList
      +ImprovedList-Item--YDF.
        #[+Link--YDF({ unendorsedExternalURI: "sharedExternalLinks.wikipedia.math.euler_sNumber" }).Article-Link Napier's constant]
          is #[+Keyword--YDID not] considered a #[+Term--YDID digit].
      +ImprovedList-Item--YDF.
        #[+Term--YDID Full-width numeric characters] are #[+Keyword--YDID not] recognized as
          #[+Term--YDID digits] #[+Keyphrase--YDID by this function].
      +ImprovedList-Item--YDF.
        Unlike the function #[+ImportantEntity__Code--YDID isStringifiedNonNegativeIntegerOfRegularNotation],
          this function is appropriate for strings that can begin with any number of 0s.

    +CodeViewer--YDF
      +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.TypeScript })

        +CodeViewer-PartialListing--YDF.
          import { areStringifiedDigitsOnly } from "@yamato-daiwa/es-extensions";

          console.log(areStringifiedDigitsOnly("123"));
        +CodeViewer-Explanation--YDF.
          #[+Keyword--YDID All] the characters are #[+Term--YDID digits], so the return value is #[+SecondaryEntity__Code--YDID true].

        +CodeViewer-PartialListing--YDF.
          console.log(areStringifiedDigitsOnly("032"));
        +CodeViewer-Explanation--YDF.
          #[+Keyphrase--YDID In this case], even though the first character of the argument is a #[+SecondaryEntity__Code--YDID 0],
            the function returns #[+SecondaryEntity__Code--YDID true].

        +CodeViewer-PartialListing--YDF.
          console.log(areStringifiedDigitsOnly("03e"));
        +CodeViewer-Explanation--YDF.
          Is #[+SecondaryEntity__Code--YDID e] #[+Term--YDID Napierâ€™s constant]?
          In any case, the function, as the name suggests, checks if #[+Keyword--YDID all] the characters of the string
            are digits, so the return value is #[+SecondaryEntity__Code--YDID false].

        +CodeViewer-PartialListing--YDF.
          console.log(areStringifiedDigitsOnly("ab1"));
        +CodeViewer-Explanation--YDF.
          The #[+Term--YDID string] contains a #[+Keyword--YDID non-]#[+Term--YDID digit] character, so the return
            value is #[+SecondaryEntity__Code--YDID false].


    h2.Article-Heading2 When to Use This Function

    p.Article-Paragraph.
      This function can be used to prevent #[+Term--YDID incorrect string input].
      If you would like to allow users to enter #[+Term--YDID sequences of digits] and
      #[+Keyphrase--YDID not necessarily numbers], the change can be cancelled if the string contains a character that
        is not a digit.
      (This makes this function appropriate for #[+SecondaryEntity--YDID JAN codes] and similar string formats.)
