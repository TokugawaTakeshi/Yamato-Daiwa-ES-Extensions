extends ../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../SharedAssets/Markup/SharedAssets.japanese.pug
  include ../../../../../SharedComponents/SharedComponents.japanese.pug


block append Metadata

  -

    RegularWebPageTemplate__YDF.configure({
      metadata: {
        title: buildHTML_PageTitle("areStringifiedDigitsOnly"),
        description: MetaDescriptionTemplates.function({
          functionName: "areStringifiedDigitsOnly",
          whatFunctionDoes: MetaDescriptionTemplates.function({
            functionName: "areStringifiedDigitsOnly",
            whatFunctionDoes: "対象文字列が数字のみかどうかを確認して真/偽を返す。"
          })
        })
      },
      stylesSheetsURIs: [
        "$CommonStyles",
        "$LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
        "$PreMadesStyles",
        "@CustomizedExternalComponents"
      ]
    });

    RoutingEmulator.setCurrentRoute("coreLibrary.children.functionality.children.strings.children.areStringifiedDigitsOnly");

    LanguageDropDownList__YDF_DK.setLinks({
      english: routing.english.coreLibrary.$children.functionality.$children.strings.$children.
          areStringifiedDigitsOnly.$URI,
      russian: routing.russian.coreLibrary.$children.functionality.$children.strings.$children.
          areStringifiedDigitsOnly.$URI
    });


block append HeadScripts

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    +CallableExpressionScheme--YDF_DK({
      technicalName: "areStringifiedDigitsOnly",
      headingTag: "h1",
      localizedDescriptiveHeading: "文字列化した数字のみであるか",
      parametersSpecification: [
        {
          localizedName: "数字のみと推測される文字列",
          type: "string",
          required: true,
          genericTechnicalName: "targetString"
        }
      ],
      returnedValue: "boolean"
    })

    p.Article-Paragraph.
      #[+Term--YDID 文字列]の#[+Keyword--YDID 全]文字が文字列化した#[+Term--YDID 数字]かどうか確認する。

    p.Article-Paragraph.
      無論、#[+Term--YDID 正規表現]を使う事でも同じ処理を簡単に出来るだろう。
      しかし#[+Term--YDID 正規表現]は「多機能だが暗号の様な見た目なので理解し難い」のがネックだ。
      このライブラリの目的は、高級言語の様に「人間に理解しやすい処理方法」を提供する事である。
      理想としては用途を必要最小限に絞り込み、一義的な名称の関数やクラスメソッドを順番に呼び出す様なコードが、箇条書きの様に読みやすくなる事だ。

    +AdmonitionBlock--YDF({ decorativeVariation: AdmonitionBlock__YDF.DecorativeVariations.notice, SVG_Icon: true })

      h2.Article-Heading2 数と数字の違いを知る

      p.Article-Paragraph.
        マスコミ等で#[+Term--YDID 数字]と#[+Term--YDID 数]が同一視される事例が多いが、これらは#[+Keyword--YDID 根本的に]異なるものなのだ。
        #[+DefinableTerm--YDID 数字]は#[+ImportantEntity--YDID 0]から#[+ImportantEntity--YDID 9]迄の#[+Term--YDID 文字]であり、
          #[+ImportantEntity--YDID 10個]しか存在していない。
        関数名に登場する#[+ImportantEntity--YDID digits]（単数：#[+ImportantEntity--YDID digit]）は、直訳通り#[+Term--YDID 数字]を意味する。

      p.Article-Paragraph.
        #[+ImportantEntity--YDID 2桁以上]になってくると、其れは#[+Term--YDID 数字]#[+Keyphrase--YDID ではなく]#[+Term--YDID 数]となる。
        尚#[+SecondaryEntity--YDID 0123]や#[+SecondaryEntity--YDID 0056]の様に#[+SecondaryEntity--YDID 0]から始まっていても、
          #[+Term--YDID 数]#[+Keyword--YDID ではなく]単なる#[+DefinableTerm--YDID 数字の羅列]であり、
          #[+Keyword--YDID 数学的な]意味は#[+Keyword__Contrast--YDID 無い]。

    +ImprovedList--YDF({ type: ImprovedList__YDF.Types.unordered }).Article-ImprovedList
      +ImprovedList-Item--YDF.
        #[a.Article-Link(href=sharedExternalLinks.wikipedia.math.euler_sNumber target="_blank" rel="nofollow") ネイピア数]は
          #[+Term--YDID 数字]とは#[+Keyword--YDID 見做されない]。
      +ImprovedList-Item--YDF #[+Term--YDID 全角数字]は#[+Keyword--YDID 対象外]。
      +ImprovedList-Item--YDF.
        #[+ImportantEntity__Code--YDID isStringifiedNonNegativeIntegerOfRegularNotation]とは異なり、
          一桁目に#[+ImportantEntity__Code--YDID 0]（#[+Term--YDID がある数字の並び]）は妥当としている。

    +CodeViewer--YDF
      +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.TypeScript })

        +CodeViewer-PartialListing--YDF.
          import { areStringifiedDigitsOnly } from "@yamato-daiwa/es-extensions";

          console.log(areStringifiedDigitsOnly("123"));
        +CodeViewer-Explanation--YDF.
          #[+Term--YDID 数字]以外を含めていないので、返値は#[+SecondaryEntity__Code--YDID true]。

        +CodeViewer-PartialListing--YDF.
          console.log(areStringifiedDigitsOnly("032"));
        +CodeViewer-Explanation--YDF.
          #[+Keyphrase--YDID 此の関数の場合]、一桁目が#[+SecondaryEntity__Code--YDID 0]であっても#[+Keyword--YDID 妥当]とされているので、
          #[+SecondaryEntity__Code--YDID true]。

        +CodeViewer-PartialListing--YDF.
          console.log(areStringifiedDigitsOnly("03e"));
        +CodeViewer-Explanation--YDF.
          #[+SecondaryEntity__Code--YDID e]は#[+Term--YDID ネイピア数]か？何方にせよ関数名が示す通り、数字だけでない場合は
          返値#[+SecondaryEntity__Code--YDID false]。

        +CodeViewer-PartialListing--YDF.
          console.log(areStringifiedDigitsOnly("ab1"));
        +CodeViewer-Explanation--YDF.
          #[+Term--YDID 数字]以外が含まれるので、返値は#[+SecondaryEntity__Code--YDID false]。


    h2.Article-Heading2 利用事例

    p.Article-Paragraph.
      #[+Term--YDID 誤入力]対策。
      数とは限らない#[+Term--YDID 数字の羅列]を入力させたい時に、数字以外の文字が含まれると変更キャンセル。
      （#[+SecondaryEntity--YDID JANコード]や其の外のコード）時に最適。
