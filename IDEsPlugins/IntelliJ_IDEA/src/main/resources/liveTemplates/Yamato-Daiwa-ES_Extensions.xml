<templateSet group="Yamato-Daiwa ES-Extensions (TypeScript)">
  <template name="teal" value="Logger.throwErrorAndLog({&#10;  &#10;  errorInstance: new UnexpectedEventError(&quot;$END$&quot;),&#10;  // 又は&#10;  errorType: UnexpectedEventError.NAME,&#10;  description: &quot;&quot;,&#10;  &#10;  title: UnexpectedEventError.DEFAULT_TITLE,&#10;  occurrenceLocation: &quot;className.methodName(parametersObject)&quot;,&#10;  wrappableError: error&#10;});" description="Logger.throwErrorAndLog()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="li" value="Logger.logInfo({&#10;  title: &quot;$TITLE$&quot;,&#10;  description: &quot;$DESCRIPTION$&quot;&#10;});" description="Logger.logInfo()" toReformat="false" toShortenFQNames="true">
    <variable name="TITLE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="DESCRIPTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="le" value="Logger.logError({&#10;  errorType: UnexpectedEventError.NAME,&#10;  title: UnexpectedEventError.DEFAULT_TITLE,&#10;  description: &quot;$END$&quot;,&#10;  occurrenceLocation: &quot;className.methodName(parametersObject)&quot;,&#10;  caughtError: error&#10;});" description="Logger.logError()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="lelm" value="Logger.logErrorLikeMessage({&#10;  title: UnexpectedEventError.DEFAULT_TITLE,&#10;  description: &quot;'foo' is 'null'. With correctly working validation it could not be.&quot;,&#10;  customBadgeText: &quot;Exception&quot;&#10;});" description="Logger.logErrorLikeMessage()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="lw" value="Logger.logWarning({&#10;  title: UnexpectedEventError.DEFAULT_TITLE,&#10;  description: &quot;$END$&quot;,&#10;  occurrenceLocation: &quot;className.methodName(parametersObject)&quot;&#10;});" description="Logger.logWarning" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ls" value="Logger.logSuccess({&#10;  title: &quot;Sign in success&quot;,&#10;  description: &quot;$END$&quot;&#10;});" description="Logger.logSuccess)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>